<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <tool name="open_shot_file" label="Open Shot File" icon="PLASMA_App">
    <helpText><![CDATA[Open shot file.]]></helpText>
    <script scriptType="python"><![CDATA[import os
import pipe
import hou
from pathlib import Path
import sys
from pipe.shared.helper.utilities.houdini_utils import HoudiniNodeUtils, HoudiniUtils
from pipe.shared.object import Shot

def set_frame_range(shot: Shot, global_start_frame=1000, extra_frames=5):
    handle_start, shot_start, shot_end, handle_end = shot.get_shot_frames(global_start_frame=global_start_frame, extra_frames=extra_frames)
    hou.playbar.setFrameRange(handle_start, handle_end)
    hou.playbar.setPlaybackRange(shot_start, shot_end)

def configure_new_shot_file(shot: Shot, department_name: str):
    HoudiniNodeUtils.configure_new_scene(shot, department_name)
    set_frame_range(shot)

def open_shot_file():
    if HoudiniUtils.check_for_unsaved_changes() == 1:
        return
    
    shot = HoudiniUtils.prompt_user_for_shot()
    
    if shot:
        subfile_type = HoudiniUtils.prompt_user_for_subfile_type()

        if subfile_type:
            file_path = shot.get_shotfile(subfile_type)
            
            # If the file already exists, go ahead and load it!
            if os.path.isfile(file_path):
                hou.hipFile.load(file_path, suppress_save_prompt=True)
            
            # Otherwise create a new file and save it!
            else:
                # Ensure directory exists
                Path(file_path).parent.mkdir(parents=True, exist_ok=True)
                
                hou.hipFile.clear(suppress_save_prompt=True)
                hou.hipFile.save(file_path)
                
                configure_new_shot_file(shot, subfile_type)
                
                hou.hipFile.save(file_path)


open_shot_file()
]]></script>
  </tool>
</shelfDocument>
